/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FileMetadataDTO } from './FileMetadataDTO';
import {
    FileMetadataDTOFromJSON,
    FileMetadataDTOFromJSONTyped,
    FileMetadataDTOToJSON,
} from './FileMetadataDTO';

/**
 * 
 * @export
 * @interface LoadAllFilesResponse
 */
export interface LoadAllFilesResponse {
    /**
     * 
     * @type {number}
     * @memberof LoadAllFilesResponse
     */
    offset: number;
    /**
     * 
     * @type {number}
     * @memberof LoadAllFilesResponse
     */
    total: number;
    /**
     * 
     * @type {Array<FileMetadataDTO>}
     * @memberof LoadAllFilesResponse
     */
    files: Array<FileMetadataDTO>;
}

/**
 * Check if a given object implements the LoadAllFilesResponse interface.
 */
export function instanceOfLoadAllFilesResponse(value: object): value is LoadAllFilesResponse {
    if (!('offset' in value) || value['offset'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('files' in value) || value['files'] === undefined) return false;
    return true;
}

export function LoadAllFilesResponseFromJSON(json: any): LoadAllFilesResponse {
    return LoadAllFilesResponseFromJSONTyped(json, false);
}

export function LoadAllFilesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoadAllFilesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'offset': json['offset'],
        'total': json['total'],
        'files': ((json['files'] as Array<any>).map(FileMetadataDTOFromJSON)),
    };
}

export function LoadAllFilesResponseToJSON(value?: LoadAllFilesResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'offset': value['offset'],
        'total': value['total'],
        'files': ((value['files'] as Array<any>).map(FileMetadataDTOToJSON)),
    };
}

